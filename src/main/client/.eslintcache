[{"/Users/harry/Documents/DistributedSystems/AppointmentManagementSystem/src/main/client/src/index.js":"1","/Users/harry/Documents/DistributedSystems/AppointmentManagementSystem/src/main/client/src/components/CarrierAdministration.js":"2","/Users/harry/Documents/DistributedSystems/AppointmentManagementSystem/src/main/client/src/components/CarrierPending.js":"3","/Users/harry/Documents/DistributedSystems/AppointmentManagementSystem/src/main/client/src/components/SelectScreen.js":"4","/Users/harry/Documents/DistributedSystems/AppointmentManagementSystem/src/main/client/src/App.js":"5","/Users/harry/Documents/DistributedSystems/AppointmentManagementSystem/src/main/client/src/components/SystemAdministration.js":"6","/Users/harry/Documents/DistributedSystems/AppointmentManagementSystem/src/main/client/src/components/Nav.js":"7","/Users/harry/Documents/DistributedSystems/AppointmentManagementSystem/src/main/client/src/services/auth.service.js":"8","/Users/harry/Documents/DistributedSystems/AppointmentManagementSystem/src/main/client/src/components/Dashboard.js":"9","/Users/harry/Documents/DistributedSystems/AppointmentManagementSystem/src/main/client/src/components/CreateCarrier.js":"10","/Users/harry/Documents/DistributedSystems/AppointmentManagementSystem/src/main/client/src/components/Error.js":"11","/Users/harry/Documents/DistributedSystems/AppointmentManagementSystem/src/main/client/src/components/CarrierHandled.js":"12"},{"size":478,"mtime":1603876106779,"results":"13","hashOfConfig":"14"},{"size":12109,"mtime":1607647296302,"results":"15","hashOfConfig":"14"},{"size":5640,"mtime":1607683098650,"results":"16","hashOfConfig":"14"},{"size":4187,"mtime":1607646149792,"results":"17","hashOfConfig":"14"},{"size":2242,"mtime":1607433730401,"results":"18","hashOfConfig":"14"},{"size":22617,"mtime":1607680648689,"results":"19","hashOfConfig":"14"},{"size":6598,"mtime":1607601779866,"results":"20","hashOfConfig":"14"},{"size":807,"mtime":1607431078469,"results":"21","hashOfConfig":"14"},{"size":3242,"mtime":1607681480831,"results":"22","hashOfConfig":"14"},{"size":6921,"mtime":1607646314527,"results":"23","hashOfConfig":"14"},{"size":290,"mtime":1607434192040,"results":"24","hashOfConfig":"14"},{"size":5656,"mtime":1607683185536,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"8xr4oh",{"filePath":"28","messages":"29","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/harry/Documents/DistributedSystems/AppointmentManagementSystem/src/main/client/src/index.js",[],"/Users/harry/Documents/DistributedSystems/AppointmentManagementSystem/src/main/client/src/components/CarrierAdministration.js",["57","58","59","60","61","62","63","64","65","66","67","68","69","70","71","72","73","74","75"],"import React, { useState, useEffect }from 'react'\nimport Container from '@material-ui/core/Container';\nimport Button from '@material-ui/core/Button';\nimport { TransitionGroup } from 'react-transition-group';\nimport LocalHospitalIcon from '@material-ui/icons/LocalHospital';\nimport {makeStyles, useTheme} from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport PersonPinIcon from '@material-ui/icons/PersonPin';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport PropTypes from 'prop-types';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport SwipeableViews from 'react-swipeable-views';\nimport Fade from '@material-ui/core/Fade';\nimport Slide from '@material-ui/core/Slide';\nimport {Link} from 'react-router-dom';\nimport Nav from './Nav'\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport AuthService from \".././services/auth.service\";\nimport EditIcon from '@material-ui/icons/Edit';\nimport { useHistory } from 'react-router'\nimport 'date-fns';\nimport DateFnsUtils from '@date-io/date-fns';\nimport {\n    MuiPickersUtilsProvider,\n    KeyboardTimePicker,\n    KeyboardDatePicker,\n  } from '@material-ui/pickers';\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n    button: {\n        margin: theme.spacing(1),\n    },\n    table: {\n      minWidth: 650,\n    },\n    toolbar: theme.mixins.toolbar,\n    content: {\n        [theme.breakpoints.up(\"sm\")]: {\n          marginLeft: drawerWidth,\n          width: `calc(100% - ${drawerWidth}px)`\n        }\n      },\n}))\n\n  export default function DataTable() {\n    const classes = useStyles();\n\n// add employee dialog\n\nconst [open, setOpen] = React.useState(false);\n\nconst handleClickOpen = () => {\n  setOpen(true);\n};\n\nconst handleDialogClose = () => {\n  setOpen(false);\n};\n\n// date picker for employees\n\nconst [selectedDate, setSelectedDate] = React.useState(new Date('2020-01-01T00:00:00'));\n\nconst handleDateChange = (date) => {\n    setSelectedDate(date);\n    setEmployee({...employee, birthday: date})\n  };\n\n  // Fetches current user information and then stores it into currentUser state\n\nconst [currentUser, setCurrentUser] = useState({\n\n});\n\nuseEffect(() => {\n  const user = AuthService.getCurrentUser();\n  // console.log(user);\n\n  if (user) {\n    setCurrentUser(user);\n    // console.log(currentUser);\n  } else {\n    console.log(\"user not logged\");\n  }\n}, []);\n\n// Fetches the carrier that the user is supervisor in \n\n\nconst [carrier, setCarrier] = useState({\n\n});\n\nuseEffect(() => {\n  fetch(`http://localhost:8080/supervisor/${currentUser.id}/carriers`, {\n          headers: new Headers({\n              'Authorization': 'Bearer ' + currentUser.accessToken, \n            }), \n      })\n      .then(response => response.json())\n      .then(json => setCarrier(json))\n  }, [currentUser]); //Should be currentUser not carrier\n\nconst [employees, setEmployees] = useState([\n\n])\n\n// fetches the users from the specific carrier\n\nuseEffect( () => {\n  fetch(`http://localhost:8080/supervisor/carriers/${carrier.id}/employees/`, {\n      headers: new Headers({\n          'Authorization': 'Bearer ' + currentUser.accessToken, \n        }), \n  })\n  .then(response => response.json())\n  .then(json => setEmployees(json))\n}, [employees])\n\n//  // Post request to add a user\n\nconst [employee, setEmployee] = useState({})\n\n\n const onEmployeeSubmit = (e) => {\n  e.preventDefault()\n  const userReceived = AuthService.getCurrentUser();\n  console.log(employee)\n  console.log(\"employee to send\")\n  fetch(`http://localhost:8080/supervisor/carriers/${carrier.id}/employees/create`, {\n    method: 'POST',\n    headers: new Headers({\n      'Authorization': 'Bearer ' + userReceived.accessToken,\n      \"Content-Type\": \"application/json\", \n    }), \n    body: JSON.stringify(employee),\n  })\n  .then(res => res.json())\n  .then(json => setEmployee(json.employee))\n  .then(setEmployees(employee))\n}\n\n// DELETE EMPLOYEE / USER\n\n// delete request\n\nconst deleteUser = (employeeID) => {\n  console.log(employeeID)\n  const userReceived = AuthService.getCurrentUser();\n  fetch(`http://localhost:8080/supervisor/carriers/${carrier.id}/employees/${employeeID}`, {\n    method: 'DELETE',\n    headers: new Headers({\n      'Authorization': 'Bearer ' + userReceived.accessToken,\n      \"Content-Type\": \"application/json\", \n    }), \n  })\n  .then(response => response.json())\n  console.log(employeeID + \":employee deleted!!!\")\n};\n\n// Put request to edit the specific employee\n\n// const onEditedUserSubmit = (e) => {\n//   e.preventDefault()\n//   const userReceived = AuthService.getCurrentUser();\n//   console.log(\"attempting to send\")\n//   console.log(editEmployee);\n//   setUser(editEmployee)\n//   console.log(user);\n//   fetch(`http://localhost:8080/admin/users/${editUser.id}/edit`, {\n//     method: 'PUT',\n//     headers: new Headers({\n//       'Authorization': 'Bearer ' + userReceived.accessToken,\n//       \"Content-Type\": \"application/json\", \n//     }), \n//     body: JSON.stringify(editUser),\n//   })\n//   .then(res => res.json())\n//   .then(json => setUsers(json.editUser))\n// }\n\n    return (\n        <div>\n        <Nav/>\n        <div className={classes.content}>\n        <Container maxwidth=\"sm\" className={classes.toolbar}>\n         {/* <div style={{display: 'inline-flex'}}>\n          <Button startIcon={<LocalHospitalIcon />} color=\"primary\" variant=\"outlined\" className={classes.button}>Add</Button>\n          <span style={{marginLeft: \"550px\", marginTop: \"8px\"}}>\n      </span>\n      </div> */}\n      <Toolbar/>\n      <Button variant=\"outlined\" color=\"black\" onClick={handleClickOpen}>\n      Add Employee\n      </Button>\n      {/* overflow hides the scrollbar at the table on patient GET/POST/UPDATE/DELETE */}\n      <TableContainer component={Paper} style={{overflow: \"hidden\"}}>\n      <Table className={classes.table} aria-label=\"simple table\">\n      <TableHead>\n        <TableRow>\n          <TableCell><strong>Name</strong></TableCell>\n          <TableCell><strong>Username</strong></TableCell>\n          <TableCell><strong>Email</strong></TableCell>\n          <TableCell><strong>Civil Registration Number</strong></TableCell>\n          {/* <TableCell><strong>System Role</strong></TableCell> */}\n          <TableCell><strong>Address</strong></TableCell>\n          <TableCell><strong>Date of birth</strong></TableCell>\n          <TableCell align=\"center\"><strong>Action</strong></TableCell>\n        </TableRow>\n      </TableHead>\n      <TableBody>\n        {employees.length > 0 && employees.map((employeeCarrier) => (   \n      <Slide direction=\"up\" in={employees} mountOnEnter unmountOnExit>\n      <TableRow key={employeeCarrier.id}>\n            <TableCell>{employeeCarrier.fullname}</TableCell>\n            <TableCell>{employeeCarrier.username}</TableCell>\n            <TableCell>{employeeCarrier.email}</TableCell>\n            <TableCell>{employeeCarrier.crn}</TableCell>\n            {/* <TableCell>{employeeCarrier.role}</TableCell> */}\n            <TableCell>{employeeCarrier.address}</TableCell>\n            <TableCell>{employeeCarrier.birthday}</TableCell>\n            <TableCell align=\"center\">\n            {/* <Tooltip title=\"Modify\">\n                        <IconButton aria-label=\"modify\" size=\"small\" onClick={() => handleClickOpenEditUser(user)}>\n                            <EditIcon />\n                         </IconButton>\n                        </Tooltip>  */}\n                      <Tooltip title=\"Delete\">\n                        <IconButton aria-label=\"delete\" onClick={()=>deleteUser(employeeCarrier.id)}>\n                          <DeleteIcon />\n                        </IconButton>\n                       </Tooltip> \n            </TableCell>\n          </TableRow>\n          </Slide>\n        ))}\n      </TableBody>\n    </Table>\n  </TableContainer>\n  <Dialog open={open} onClose={handleDialogClose} aria-labelledby=\"form-dialog-title\">\n<form className={classes.root} noValidate autoComplete=\"off\" onSubmit={onEmployeeSubmit}>\n        <DialogTitle id=\"form-dialog-title\">EMPLOYEE CREATION</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            To add a new employee to the system, please use the form below\n          </DialogContentText>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            type=\"text\"\n            label=\"Full name\"\n            name=\"employee[fullname]\"\n            onChange={e => setEmployee({...employee, fullname: e.target.value})}\n            autoFocus\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            type=\"text\"\n            label=\"Address\"\n            name=\"employee[address]\"\n            onChange={e => setEmployee({...employee, address: e.target.value})}\n            autoFocus\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"email\"\n            label=\"Email Address\"\n            name=\"employee[email]\"\n            autoComplete=\"email\"\n            autoFocus\n            onChange={e => setEmployee({...employee, email: e.target.value})}\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            type=\"number\"\n            label=\"Civil Registration Number\"\n            name=\"employee[crn]\"\n            onChange={e => setEmployee({...employee, crn: e.target.value})}\n            autoFocus\n          />\n          <MuiPickersUtilsProvider utils={DateFnsUtils}>\n        <KeyboardDatePicker\n          disableToolbar\n          variant=\"inline\"\n          format=\"MM/dd/yyyy\"\n          margin=\"normal\"\n          id=\"date-picker-inline\"\n          label=\"Date of Birth\"\n          value={selectedDate}\n          name=\"employee[birthday]\"\n          fullWidth\n          onChange={handleDateChange}\n          KeyboardButtonProps={{\n            'aria-label': 'change date',\n          }}\n        />\n        </MuiPickersUtilsProvider>\n        <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            type=\"text\"\n            label=\"Username\"\n            name=\"employee[username]\"\n            onChange={e => setEmployee({...employee, username: e.target.value})}\n            autoFocus\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            type=\"password\"\n            label=\"Password\"\n            name=\"employeee[password]\"\n            onChange={e => setEmployee({...employee, password: e.target.value})}\n            autoFocus\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleDialogClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button type=\"submit\" onClick={handleDialogClose} color=\"primary\">\n            Add\n          </Button>\n        </DialogActions>\n        </form>\n      </Dialog>\n        </Container>\n        </div>\n        </div>\n    )\n}",["76","77"],"/Users/harry/Documents/DistributedSystems/AppointmentManagementSystem/src/main/client/src/components/CarrierPending.js",["78","79","80","81","82","83"],"/Users/harry/Documents/DistributedSystems/AppointmentManagementSystem/src/main/client/src/components/SelectScreen.js",["84","85","86","87"],"/Users/harry/Documents/DistributedSystems/AppointmentManagementSystem/src/main/client/src/App.js",["88"],"import './App.css';\nimport SelectScreen from './components/SelectScreen'\nimport Dashboard from './components/Dashboard'\nimport CarrierAdministration from './components/CarrierAdministration'\nimport CarrierHandled from './components/CarrierHandled'\nimport CarrierPending from './components/CarrierPending'\nimport Error from './components/Error'\nimport SystemAdministration from './components/SystemAdministration'\nimport CreateCarrier from './components/CreateCarrier'\nimport CarrierSubmitted from './components/CarrierSubmitted'\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\nimport React, { useState, useEffect }from 'react'\nimport AuthService from \"./services/auth.service\";\n\n\nfunction App() {\n\n  const [currentUser, setCurrentUser] = useState({\n\n  });\n\n  useEffect(() => {\n    const user = AuthService.getCurrentUser();\n\n    if (user) {\n      setCurrentUser(user);\n      console.log(currentUser);\n    } else {\n      console.log(\"user not logged\");\n    }\n  }, []);\n\n  return (\n    <Router>\n    <div className=\"App\">\n      <Switch>\n      <Route path=\"/\" exact component={SelectScreen}></Route>\n      { currentUser.role === \"ROLE_SUPERVISOR\" &&\n      <Route path=\"/create/carrier\" exact component={CreateCarrier}></Route>\n      }\n      { currentUser.role === \"ROLE_SUPERVISOR\" &&\n      <Route path=\"/create/carrier/submitted\" exact component={CarrierSubmitted}></Route>\n      }\n      { currentUser.role !== undefined &&\n      <Route path=\"/dashboard\" exact component={Dashboard}></Route>\n      }\n      { currentUser.role === \"ROLE_EMPLOYEE\" &&\n      <Route path=\"/carrier/:id/employee/:id/appointments/pending\" exact component={CarrierPending}/>\n      }\n      { currentUser.role === \"ROLE_EMPLOYEE\" &&\n      <Route path=\"/carrier/:id/employee/:id/appointments/handled\" exact component={CarrierHandled}/>\n      }\n      { currentUser.role === \"ROLE_SUPERVISOR\" &&\n      <Route path=\"/carrier/:id/administration\" exact component={CarrierAdministration}/>\n      }\n      { currentUser.role === \"ROLE_ADMIN\" &&\n      <Route path=\"/administration\" exact component={SystemAdministration}/> \n      }\n      <Route path='*' exact={true} component={Error} />\n      </Switch>\n    </div>\n    </Router>\n  );\n}\n\nexport default App;\n",["89","90"],"/Users/harry/Documents/DistributedSystems/AppointmentManagementSystem/src/main/client/src/components/SystemAdministration.js",["91","92","93","94","95","96","97","98","99","100","101","102","103","104","105","106","107","108"],"import React, { useState, useEffect }from 'react'\nimport {makeStyles, useTheme, withStyles} from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Nav from './Nav'\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport AppBar from '@material-ui/core/AppBar';\nimport SwipeableViews from 'react-swipeable-views';\nimport PropTypes from 'prop-types';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Slide from '@material-ui/core/Slide';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport DraftsIcon from '@material-ui/icons/Drafts';\nimport SendIcon from '@material-ui/icons/Send';\nimport AuthService from \".././services/auth.service\";\n// Dialog component from Material UI\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport TextField from '@material-ui/core/TextField';\nimport ThumbUpIcon from '@material-ui/icons/ThumbUp';\nimport EditIcon from '@material-ui/icons/Edit';\nimport 'date-fns';\nimport DateFnsUtils from '@date-io/date-fns';\nimport {\n    MuiPickersUtilsProvider,\n    KeyboardTimePicker,\n    KeyboardDatePicker,\n  } from '@material-ui/pickers';\n\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`full-width-tabpanel-${index}`}\n      aria-labelledby={`full-width-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box p={3}>\n          <Typography>{children}</Typography>\n        </Box>\n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `full-width-tab-${index}`,\n    'aria-controls': `full-width-tabpanel-${index}`,\n  };\n}\n\nconst StyledMenu = withStyles({\n  paper: {\n    border: '1px solid #d3d4d5',\n  },\n})((props) => (\n  <Menu\n    elevation={0}\n    getContentAnchorEl={null}\n    anchorOrigin={{\n      vertical: 'bottom',\n      horizontal: 'center',\n    }}\n    transformOrigin={{\n      vertical: 'top',\n      horizontal: 'center',\n    }}\n    {...props}\n  />\n));\n\nconst StyledMenuItem = withStyles((theme) => ({\n  root: {\n    '&:focus': {\n      backgroundColor: theme.palette.primary.main,\n      '& .MuiListItemIcon-root, & .MuiListItemText-primary': {\n        color: theme.palette.common.white,\n      },\n    },\n  },\n}))(MenuItem);\n\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n    button: {\n        margin: theme.spacing(1),\n    },\n    table: {\n      minWidth: 750,\n      maxWdith: 750,\n    },\n    addEmployeeButton: {\n      backgroundColor: \"black\",\n    },\n    toolbar: theme.mixins.toolbar,\n    content: {\n        [theme.breakpoints.up(\"sm\")]: {\n          marginLeft: drawerWidth,\n          width: `calc(100% - ${drawerWidth}px)`\n        }\n      },\n}))\n\nexport default function SystemAdministration() {\n    const classes = useStyles();\n    const theme = useTheme();\n    const [value, setValue] = React.useState(0);\n  \n    const handleChange = (event, newValue) => {\n      setValue(newValue);\n    };\n  \n    const handleChangeIndex = (index) => {\n      setValue(index);\n    };\n\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  // --------------------------\n\n    /// GETTING ALL USERS\n\n    const [currentUser, setCurrentUser] = useState({\n\n    });\n\n    const [users, setUsers] = useState([\n\n    ])  \n\n    const [accessToken, setAccessToken] = useState(undefined);\n\n\n  useEffect(() => {\n    const userReceived = AuthService.getCurrentUser();\n    fetch(`http://localhost:8080/admin/users/`, {\n        headers: new Headers({\n            'Authorization': 'Bearer ' + userReceived.accessToken, \n          }), \n    })\n    .then(response => response.json())\n    .then(json => setUsers(json))\n}, [users])\n\n    // --------------------------\n\n    const [employees, setEmployees] = useState([\n\n    ]) \n\n    // dialog for adding users\n\nconst [open, setOpen] = React.useState(false);\n\nconst handleClickOpen = () => {\n  setOpen(true);\n};\n\nconst handleDialogClose = () => {\n  setOpen(false);\n};\n\n// user object to sent for the POST request\n\nconst [user, setUser] = React.useState()\n\n // Post request to add a user\n\n const onUserSubmit = (e) => {\n  e.preventDefault()\n  const userReceived = AuthService.getCurrentUser();\n  fetch(`http://localhost:8080/admin/users/create`, {\n    method: 'POST',\n    headers: new Headers({\n      'Authorization': 'Bearer ' + userReceived.accessToken,\n      \"Content-Type\": \"application/json\", \n    }), \n    body: JSON.stringify(user),\n  })\n  .then(res => res.json())\n  .then(json => setUsers(json.user))\n}\n\n// delete request\n\nconst deleteUser = (userID) => {\n  const userReceived = AuthService.getCurrentUser();\n  fetch(`http://localhost:8080/admin/users/${userID}/`, {\n    method: 'DELETE',\n    headers: new Headers({\n      'Authorization': 'Bearer ' + userReceived.accessToken,\n      \"Content-Type\": \"application/json\", \n    }), \n  })\n  .then(response => response.json())\n  console.log(userID + \":user deleted!!!\")\n};\n\n// edit request\n\n\n// declaring temporary state for the edit user\nconst [editUser, setEditUser] = useState({})\n\n\n// Edit Dialog \nconst [openEditUser, setOpenEditUser] = React.useState(false);\n\n// id passes the selected user through the icon button modify into the editUser state\n\nconst handleClickOpenEditUser = (id) => {\n  console.log(\"User to edit object below:\")\n  console.log(id)\n  setEditUser(id);\n  setOpenEditUser(true);\n};\n\nconst handleCloseEditUser = () => {\n  setOpenEditUser(false);\n};\n\n// Put request to edit the specific user of the patient\n\nconst onEditedUserSubmit = (e) => {\n  e.preventDefault()\n  const userReceived = AuthService.getCurrentUser();\n  console.log(\"attempting to send\")\n  console.log(editUser);\n  setUser(editUser)\n  console.log(user);\n  fetch(`http://localhost:8080/admin/users/${editUser.id}/edit`, {\n    method: 'PUT',\n    headers: new Headers({\n      'Authorization': 'Bearer ' + userReceived.accessToken,\n      \"Content-Type\": \"application/json\", \n    }), \n    body: JSON.stringify(editUser),\n  })\n  .then(res => res.json())\n  .then(json => setUsers(json.editUser))\n}\n\n\n// date picker\n    \nconst [selectedDate, setSelectedDate] = React.useState(new Date('1999-01-01T00:00:00'));\n    \nconst handleDateChange = (date) => {\n    setSelectedDate(date);\n    setUser({...user, birthday: date})\n    setEditUser({...editUser, birthday: date})\n  };\n\n  // condition dropdown options\n\nconst [condition, setCondition] = React.useState();\n\n  const handleRoleChange = (event) => {\n    setCondition(event.target.value);\n    setUser({...user, role: event.target.value});\n    setEditUser({...editUser, role: event.target.value});\n  };\n\nconst conditions = [\n  {\n    value: 'ROLE_ADMIN',\n  },\n  {\n    value: 'ROLE_SUPERVISOR',\n  },\n  {\n    value: 'ROLE_CITIZEN',\n  },\n];\n\n\n// receiving all carriers\n\nconst [carriers, setCarriers] = useState([\n\n])  \n\nuseEffect(() => {\n  const userReceived = AuthService.getCurrentUser();\n  fetch(`http://localhost:8080/admin/carriers/`, {\n      headers: new Headers({\n          'Authorization': 'Bearer ' + userReceived.accessToken, \n        }), \n  })\n  .then(response => response.json())\n  .then(json => setCarriers(json))\n}, [carriers])\n\n// Put request to edit the specific user of the patient\n\nconst [carrier, setCarrier] = useState({\n\n})  \n\nconst approveCarrier = (carrier) => {\n  const userReceived = AuthService.getCurrentUser();\n  console.log(carrier);\n  console.log(\"attempting to send\")\n  setCarrier(carrier)\n  let updatedCarrier = {\n    ...carrier,\n    approved: true,\n  }\n  console.log(updatedCarrier);\n\n  fetch(`http://localhost:8080/admin/carriers/${carrier.id}/approve`, {\n    method: 'PUT',\n    headers: new Headers({\n      'Authorization': 'Bearer ' + userReceived.accessToken,\n      \"Content-Type\": \"application/json\", \n    }), \n    body: JSON.stringify(updatedCarrier)\n  })\n  .then(res => res.json())\n  .then(json => setCarrier(json.updatedCarrier))\n}\n\n\n\n    return (\n        <div>\n        <Nav/>\n        <Toolbar/>\n        <div className={classes.content}>\n        <Container maxwidth=\"sm\" className={classes.toolbar}>\n        <Button\n        aria-controls=\"customized-menu\"\n        aria-haspopup=\"true\"\n        variant=\"outlined\"\n        color=\"primary\"\n        onClick={handleClickOpen}\n        >\n        CREATE USER\n      </Button>\n      <p></p>\n        <AppBar position=\"static\" color=\"default\">\n        <Tabs\n          value={value}\n          onChange={handleChange}\n          indicatorColor=\"primary\"\n          textColor=\"primary\"\n          variant=\"fullWidth\"\n          aria-label=\"full width tabs example\"\n        >\n          <Tab label=\"USERS\" {...a11yProps(0)} />\n          <Tab label=\"APPROVED CARRIERS\" {...a11yProps(1)} />\n          <Tab label=\"CARRIER APPLICATIONS\" {...a11yProps(2)} />\n        </Tabs>\n      </AppBar>\n      <SwipeableViews\n        axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\n        index={value}\n        onChangeIndex={handleChangeIndex}\n      >\n        <TabPanel value={value} index={0} dir={theme.direction}>\n        <TableContainer component={Paper} style={{overflow: \"hidden\"}}>\n    <Table className={classes.table} aria-label=\"simple table\">\n      <TableHead>\n        <TableRow>\n          <TableCell><strong>Name</strong></TableCell>\n          <TableCell><strong>Username</strong></TableCell>\n          <TableCell><strong>Email</strong></TableCell>\n          <TableCell><strong>CRN</strong></TableCell>\n          <TableCell><strong>System Role</strong></TableCell>\n          <TableCell><strong>Address</strong></TableCell>\n          <TableCell><strong>Date of birth</strong></TableCell>\n          <TableCell align=\"center\"><strong>Action</strong></TableCell>\n        </TableRow>\n      </TableHead>\n      <TableBody>\n        {users && users.map((user) => (   \n      <Slide direction=\"up\" in={users} mountOnEnter unmountOnExit>\n      <TableRow key={user.id}>\n            <TableCell>{user.fullname}</TableCell>\n            <TableCell>{user.username}</TableCell>\n            <TableCell>{user.email}</TableCell>\n            <TableCell>{user.crn}</TableCell>\n            <TableCell>{user.role}</TableCell>\n            <TableCell>{user.address}</TableCell>\n            <TableCell>{user.birthday}</TableCell>\n            <TableCell align=\"center\">\n            <Tooltip title=\"Modify\">\n                        <IconButton aria-label=\"modify\" size=\"small\" onClick={() => handleClickOpenEditUser(user)}>\n                            <EditIcon />\n                         </IconButton>\n                        </Tooltip> \n                      <Tooltip title=\"Delete\">\n                        <IconButton aria-label=\"delete\" onClick={()=>deleteUser(user.id)}>\n                          <DeleteIcon />\n                        </IconButton>\n                       </Tooltip> \n            </TableCell>\n          </TableRow>\n          </Slide>\n        ))}\n      </TableBody>\n    </Table>\n  </TableContainer>\n        </TabPanel>\n        <TabPanel value={value} index={1} dir={theme.direction}>\n        <TableContainer component={Paper} style={{overflow: \"hidden\"}}>\n    <Table className={classes.table} aria-label=\"simple table\">\n      <TableHead>\n        <TableRow>\n          <TableCell><strong>Name</strong></TableCell>\n          <TableCell><strong>Description</strong></TableCell>\n          <TableCell><strong>Phone</strong></TableCell>\n        </TableRow>\n      </TableHead>\n      <TableBody>\n        {carriers.map((carrier) => (   \n                  <>\n              { carrier.approved === true &&\n      <Slide direction=\"up\" in={carriers} mountOnEnter unmountOnExit>\n      <TableRow key={carrier.id}>\n            <TableCell>{carrier.name}</TableCell>\n            <TableCell>{carrier.description}</TableCell>\n            <TableCell>{carrier.phone}</TableCell>\n            {/* <TableCell>{carrier.approved === false ? \"Not Approved\" : \"Approved\"}</TableCell> */}\n          </TableRow>\n          </Slide>\n          }\n          </>\n        ))}\n      </TableBody>\n    </Table>\n  </TableContainer>\n        </TabPanel>\n        <TabPanel value={value} index={2} dir={theme.direction}>\n        <TableContainer component={Paper} style={{overflow: \"hidden\"}}>\n    <Table className={classes.table} aria-label=\"simple table\">\n      <TableHead>\n        <TableRow>\n          <TableCell><strong>Name</strong></TableCell>\n          <TableCell><strong>Description</strong></TableCell>\n          <TableCell><strong>Phone</strong></TableCell>\n          <TableCell><strong>Approved</strong></TableCell>\n          <TableCell align=\"center\"><strong>Action</strong></TableCell>\n        </TableRow>\n      </TableHead>\n      <TableBody>\n        {carriers.map((carrier) => (   \n                  <>\n              { carrier.approved === false &&\n      <Slide direction=\"up\" in={carriers} mountOnEnter unmountOnExit>\n      <TableRow key={carrier.id}>\n            <TableCell>{carrier.name}</TableCell>\n            <TableCell>{carrier.description}</TableCell>\n            <TableCell>{carrier.phone}</TableCell>\n            <TableCell>{carrier.approved === false ? \"Not Approved\" : \"Approved\"}</TableCell>\n            <TableCell align=\"center\">\n                      <Tooltip title=\"Approve\">\n                        <IconButton aria-label=\"approve\" onClick={()=>approveCarrier(carrier)}>\n                          <ThumbUpIcon />\n                        </IconButton>\n                       </Tooltip> \n            </TableCell>\n          </TableRow>\n          </Slide>\n          }\n          </>\n        ))}\n      </TableBody>\n    </Table>\n  </TableContainer>\n        </TabPanel>\n      </SwipeableViews>\n      <Dialog open={open} onClose={handleDialogClose} aria-labelledby=\"form-dialog-title\">\n<form className={classes.root} noValidate autoComplete=\"off\" onSubmit={onUserSubmit}>\n        <DialogTitle id=\"form-dialog-title\">USER CREATION</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            To add a new user to the system, please use the form below\n          </DialogContentText>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            type=\"text\"\n            label=\"Full name\"\n            name=\"user[fullname]\"\n            onChange={e => setUser({...user, fullname: e.target.value})}\n            autoFocus\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            type=\"text\"\n            label=\"Address\"\n            name=\"user[address]\"\n            onChange={e => setUser({...user, address: e.target.value})}\n            autoFocus\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"email\"\n            label=\"Email Address\"\n            name=\"user[email]\"\n            autoComplete=\"email\"\n            autoFocus\n            onChange={e => setUser({...user, email: e.target.value})}\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            type=\"number\"\n            label=\"Civil Registration Number\"\n            name=\"user[crn]\"\n            onChange={e => setUser({...user, crn: e.target.value})}\n            autoFocus\n          />\n          <MuiPickersUtilsProvider utils={DateFnsUtils}>\n        <KeyboardDatePicker\n          disableToolbar\n          variant=\"inline\"\n          format=\"MM/dd/yyyy\"\n          margin=\"normal\"\n          id=\"date-picker-inline\"\n          label=\"Date of Birth\"\n          value={selectedDate}\n          name=\"user[birthday]\"\n          fullWidth\n          onChange={handleDateChange}\n          KeyboardButtonProps={{\n            'aria-label': 'change date',\n          }}\n        />\n        </MuiPickersUtilsProvider>\n        <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            type=\"text\"\n            label=\"Username\"\n            name=\"user[username]\"\n            onChange={e => setUser({...user, username: e.target.value})}\n            autoFocus\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            type=\"password\"\n            label=\"Password\"\n            name=\"user[password]\"\n            onChange={e => setUser({...user, password: e.target.value})}\n            autoFocus\n          />\n          <p></p>\n          <TextField\n          variant=\"outlined\"\n          id=\"standard-select-condition\"\n          select\n          fullWidth\n          label=\"User System Role\"\n          value={condition}\n          name=\"user[role]\"\n          onChange={handleRoleChange}\n        >\n          {conditions.map((option) => (\n            <MenuItem key={option.value} value={option.value}>\n              {option.value}\n            </MenuItem>\n          ))}\n        </TextField>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleDialogClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button type=\"submit\" onClick={handleDialogClose} color=\"primary\">\n            Add\n          </Button>\n        </DialogActions>\n        </form>\n      </Dialog>\n      {/* EDIT USER DIALOG */}\n      <Dialog open={openEditUser} onClose={handleCloseEditUser} aria-labelledby=\"form-dialog-title\">\n<form className={classes.root} noValidate autoComplete=\"off\" onSubmit={onEditedUserSubmit}>\n          <DialogTitle id=\"form-dialog-title\">Edit User</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Currently editing the details of {editUser.username}\n          </DialogContentText>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            type=\"text\"\n            value={editUser.fullname}\n            label=\"Full name\"\n            name=\"user[fullname]\"\n            onChange={e => setEditUser({...editUser, fullname: e.target.value})}\n            autoFocus\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            type=\"text\"\n            value={editUser.address}\n            label=\"Address\"\n            name=\"user[address]\"\n            onChange={e => setEditUser({...editUser, address: e.target.value})}\n            autoFocus\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"email\"\n            label=\"Email Address\"\n            name=\"user[email]\"\n            autoComplete=\"email\"\n            value={editUser.email}\n            autoFocus\n            onChange={e => setEditUser({...editUser, email: e.target.value})}\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            value={editUser.crn}\n            type=\"number\"\n            label=\"Civil Registration Number\"\n            name=\"user[crn]\"\n            onChange={e => setEditUser({...editUser, crn: e.target.value})}\n            autoFocus\n          />\n          <MuiPickersUtilsProvider utils={DateFnsUtils}>\n        <KeyboardDatePicker\n          disableToolbar\n          variant=\"inline\"\n          format=\"MM/dd/yyyy\"\n          margin=\"normal\"\n          id=\"date-picker-inline\"\n          label=\"Date of Birth\"\n          value={selectedDate}\n          name=\"user[birthday]\"\n          fullWidth\n          onChange={handleDateChange}\n          KeyboardButtonProps={{\n            'aria-label': 'change date',\n          }}\n        />\n        </MuiPickersUtilsProvider>\n        <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            type=\"text\"\n            label=\"Username\"\n            value={editUser.username}\n            name=\"user[username]\"\n            onChange={e => setEditUser({...editUser, username: e.target.value})}\n            autoFocus\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            type=\"password\"\n            label=\"Password\"\n            name=\"user[password]\"\n            value={editUser.password}\n            onChange={e => setEditUser({...editUser, password: e.target.value})}\n            autoFocus\n          />\n          <p></p>\n          <TextField\n          disabled\n          variant=\"outlined\"\n          id=\"standard-select-condition\"\n          select\n          fullWidth\n          label=\"User System Role\"\n          value={editUser.role}\n          name=\"user[role]\"\n          onChange={handleRoleChange}\n        >\n          {conditions.map((option) => (\n            <MenuItem key={option.value} value={option.value}>\n              {option.value}\n            </MenuItem>\n          ))}\n        </TextField>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleCloseEditUser} color=\"primary\">\n            Cancel\n          </Button>\n          <Button type=\"submit\" onClick={handleCloseEditUser} color=\"primary\">\n            Save\n          </Button>\n        </DialogActions>\n        </form>\n      </Dialog>\n        </Container>\n        </div>\n        </div>\n    )\n}",["109","110"],"/Users/harry/Documents/DistributedSystems/AppointmentManagementSystem/src/main/client/src/components/Nav.js",["111","112","113","114","115","116"],"\nimport React, { useState, useEffect }from 'react'\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport AppBar from '@material-ui/core/AppBar';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Divider from '@material-ui/core/Divider';\nimport Drawer from '@material-ui/core/Drawer';\nimport Hidden from '@material-ui/core/Hidden';\nimport IconButton from '@material-ui/core/IconButton';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MailIcon from '@material-ui/icons/Mail';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport {Link} from 'react-router-dom';\nimport AssignmentOutlinedIcon from '@material-ui/icons/AssignmentOutlined';\nimport AssignmentTurnedInOutlinedIcon from '@material-ui/icons/AssignmentTurnedInOutlined';\nimport BuildOutlinedIcon from '@material-ui/icons/BuildOutlined';\nimport SettingsApplicationsOutlinedIcon from '@material-ui/icons/SettingsApplicationsOutlined';\nimport AddCircleOutlineOutlinedIcon from '@material-ui/icons/AddCircleOutline';\nimport EventOutlinedIcon from '@material-ui/icons/EventOutlined';\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\nimport AuthService from \"../services/auth.service\";\n// importing history\nimport {useLocation, useHistory} from 'react-router';\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  drawer: {\n    [theme.breakpoints.up('sm')]: {\n      width: drawerWidth,\n      flexShrink: 0,\n    },\n  },\n  appBar: {\n    [theme.breakpoints.up('sm')]: {\n      width: `calc(100% - ${drawerWidth}px)`,\n      marginLeft: drawerWidth,\n      backgroundColor: 'black',\n    },\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up('sm')]: {\n      display: 'none',\n    },\n  },\n  ListItemIcon: {\n    minWidth: \"28px\",\n  },\n  // necessary for content to be below app bar\n  toolbar: theme.mixins.toolbar,\n  drawerPaper: {\n    width: drawerWidth,\n    color: '#037ffc',\n  },\n  content: {\n    [theme.breakpoints.up(\"sm\")]: {\n      marginLeft: drawerWidth,\n      width: `calc(100% - ${drawerWidth}px)`\n    }\n  },\n}));\n\nfunction ResponsiveDrawer(props) {\n  const { window } = props;\n  const classes = useStyles();\n  const theme = useTheme();\n  const [mobileOpen, setMobileOpen] = React.useState(false);\n\n  const handleDrawerToggle = () => {\n    setMobileOpen(!mobileOpen);\n  };\n\n  const [currentUser, setCurrentUser] = useState({\n\n  });\n\n  useEffect(() => {\n    const user = AuthService.getCurrentUser();\n\n    if (user) {\n      setCurrentUser(user);\n    } else {\n      console.log(\"user not logged\");\n    }\n  }, []);\n\n\n  const drawer = (\n    <div>\n      <div className={classes.toolbar} />\n\n      <Divider />\n      <List>\n          {currentUser.role === \"ROLE_EMPLOYEE\" &&\n          <ListItem button key=\"Pending\" component={Link} to=\"/carrier/:id/employee/:id/appointments/pending\">\n            <ListItemIcon><AssignmentOutlinedIcon/></ListItemIcon>\n            <ListItemText primary=\"Pending Appointments\" />            \n          </ListItem>\n          }\n         {currentUser.role === \"ROLE_EMPLOYEE\" &&\n          <ListItem button key=\"Handled\" component={Link} to=\"/carrier/:id/employee/:id/appointments/handled\">\n          <ListItemIcon><AssignmentTurnedInOutlinedIcon/></ListItemIcon>\n            <ListItemText primary=\"Handled Appointments\" />\n          </ListItem>\n          }\n          {/* <Divider /> */}\n          { currentUser.role === \"ROLE_SUPERVISOR\" &&\n          <ListItem button key=\"NewCarrier\" component={Link} to=\"/create/carrier\">\n          <ListItemIcon><EditOutlinedIcon/></ListItemIcon>\n            <ListItemText primary=\"Create Carrier\" />\n          </ListItem>\n          }\n          { currentUser.role === \"ROLE_SUPERVISOR\" &&\n          <ListItem button key=\"Supervisor\" component={Link} to=\"/carrier/:id/administration\">\n          <ListItemIcon><BuildOutlinedIcon/></ListItemIcon>\n            <ListItemText primary=\"Carrier Administration\" />\n          </ListItem>\n          }\n          {/* <Divider /> */}\n          { currentUser.role === \"ROLE_ADMIN\" &&\n          <ListItem button key=\"Administrator\" component={Link} to=\"/administration\">\n          <ListItemIcon><SettingsApplicationsOutlinedIcon/></ListItemIcon>\n            <ListItemText primary=\"System Administration\" />\n          </ListItem>\n          }\n      </List>\n    </div>\n  );\n\n  const container = window !== undefined ? () => window().document.body : undefined;\n\nconst history = useHistory();\n\n  const logout = () => {\n    AuthService.logout();\n    history.push(\"/\")\n  };\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar position=\"fixed\" className={classes.appBar}>\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            edge=\"start\"\n            onClick={handleDrawerToggle}\n            className={classes.menuButton}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" noWrap>\n            APPOINTMENT MANAGEMENT\n          </Typography>\n          <Button color=\"inherit\" onClick={logout}>LOGOUT</Button>\n        </Toolbar>\n      </AppBar>\n      <Toolbar/>\n      <nav className={classes.drawer} aria-label=\"mailbox folders\">\n        {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\n        <Hidden smUp implementation=\"css\">\n          <Drawer\n            container={container}\n            variant=\"temporary\"\n            anchor={theme.direction === 'rtl' ? 'right' : 'left'}\n            open={mobileOpen}\n            onClose={handleDrawerToggle}\n            classes={{\n              paper: classes.drawerPaper,\n            }}\n            ModalProps={{\n              keepMounted: true, // Better open performance on mobile.\n            }}\n          >\n            {drawer}\n          </Drawer>\n        </Hidden>\n        <Hidden xsDown implementation=\"css\">\n          <Drawer\n            classes={{\n              paper: classes.drawerPaper,\n            }}\n            variant=\"permanent\"\n            open\n          >\n            {drawer}\n          </Drawer>\n        </Hidden>\n      </nav>\n    </div>\n  );\n}\n\nexport default ResponsiveDrawer;","/Users/harry/Documents/DistributedSystems/AppointmentManagementSystem/src/main/client/src/services/auth.service.js",["117"],"/Users/harry/Documents/DistributedSystems/AppointmentManagementSystem/src/main/client/src/components/Dashboard.js",["118","119","120","121","122","123","124","125","126","127","128","129"],"/Users/harry/Documents/DistributedSystems/AppointmentManagementSystem/src/main/client/src/components/CreateCarrier.js",["130","131","132","133","134"],"/Users/harry/Documents/DistributedSystems/AppointmentManagementSystem/src/main/client/src/components/Error.js",["135","136"],"/Users/harry/Documents/DistributedSystems/AppointmentManagementSystem/src/main/client/src/components/CarrierHandled.js",["137","138","139","140","141","142","143","144","145","146"],{"ruleId":"147","severity":1,"message":"148","line":4,"column":10,"nodeType":"149","messageId":"150","endLine":4,"endColumn":25},{"ruleId":"147","severity":1,"message":"151","line":5,"column":8,"nodeType":"149","messageId":"150","endLine":5,"endColumn":25},{"ruleId":"147","severity":1,"message":"152","line":6,"column":21,"nodeType":"149","messageId":"150","endLine":6,"endColumn":29},{"ruleId":"147","severity":1,"message":"153","line":16,"column":8,"nodeType":"149","messageId":"150","endLine":16,"endColumn":21},{"ruleId":"147","severity":1,"message":"154","line":18,"column":8,"nodeType":"149","messageId":"150","endLine":18,"endColumn":17},{"ruleId":"147","severity":1,"message":"155","line":19,"column":8,"nodeType":"149","messageId":"150","endLine":19,"endColumn":14},{"ruleId":"147","severity":1,"message":"156","line":20,"column":8,"nodeType":"149","messageId":"150","endLine":20,"endColumn":12},{"ruleId":"147","severity":1,"message":"157","line":21,"column":8,"nodeType":"149","messageId":"150","endLine":21,"endColumn":11},{"ruleId":"147","severity":1,"message":"158","line":22,"column":8,"nodeType":"149","messageId":"150","endLine":22,"endColumn":18},{"ruleId":"147","severity":1,"message":"159","line":23,"column":8,"nodeType":"149","messageId":"150","endLine":23,"endColumn":11},{"ruleId":"147","severity":1,"message":"160","line":24,"column":8,"nodeType":"149","messageId":"150","endLine":24,"endColumn":22},{"ruleId":"147","severity":1,"message":"161","line":25,"column":8,"nodeType":"149","messageId":"150","endLine":25,"endColumn":12},{"ruleId":"147","severity":1,"message":"162","line":27,"column":9,"nodeType":"149","messageId":"150","endLine":27,"endColumn":13},{"ruleId":"147","severity":1,"message":"163","line":30,"column":8,"nodeType":"149","messageId":"150","endLine":30,"endColumn":11},{"ruleId":"147","severity":1,"message":"164","line":31,"column":8,"nodeType":"149","messageId":"150","endLine":31,"endColumn":15},{"ruleId":"147","severity":1,"message":"165","line":39,"column":8,"nodeType":"149","messageId":"150","endLine":39,"endColumn":16},{"ruleId":"147","severity":1,"message":"166","line":40,"column":10,"nodeType":"149","messageId":"150","endLine":40,"endColumn":20},{"ruleId":"147","severity":1,"message":"167","line":45,"column":5,"nodeType":"149","messageId":"150","endLine":45,"endColumn":23},{"ruleId":"168","severity":1,"message":"169","line":140,"column":4,"nodeType":"170","endLine":140,"endColumn":15,"suggestions":"171"},{"ruleId":"172","replacedBy":"173"},{"ruleId":"174","replacedBy":"175"},{"ruleId":"147","severity":1,"message":"152","line":2,"column":21,"nodeType":"149","messageId":"150","endLine":2,"endColumn":29},{"ruleId":"147","severity":1,"message":"176","line":12,"column":8,"nodeType":"149","messageId":"150","endLine":12,"endColumn":14},{"ruleId":"147","severity":1,"message":"177","line":16,"column":8,"nodeType":"149","messageId":"150","endLine":16,"endColumn":18},{"ruleId":"147","severity":1,"message":"178","line":46,"column":10,"nodeType":"149","messageId":"150","endLine":46,"endColumn":19},{"ruleId":"147","severity":1,"message":"179","line":46,"column":21,"nodeType":"149","messageId":"150","endLine":46,"endColumn":33},{"ruleId":"168","severity":1,"message":"169","line":99,"column":4,"nodeType":"170","endLine":99,"endColumn":18,"suggestions":"180"},{"ruleId":"147","severity":1,"message":"181","line":1,"column":27,"nodeType":"149","messageId":"150","endLine":1,"endColumn":36},{"ruleId":"147","severity":1,"message":"182","line":6,"column":8,"nodeType":"149","messageId":"150","endLine":6,"endColumn":24},{"ruleId":"147","severity":1,"message":"183","line":7,"column":8,"nodeType":"149","messageId":"150","endLine":7,"endColumn":16},{"ruleId":"147","severity":1,"message":"184","line":71,"column":17,"nodeType":"149","messageId":"150","endLine":71,"endColumn":27},{"ruleId":"168","severity":1,"message":"185","line":31,"column":6,"nodeType":"170","endLine":31,"endColumn":8,"suggestions":"186"},{"ruleId":"172","replacedBy":"187"},{"ruleId":"174","replacedBy":"188"},{"ruleId":"147","severity":1,"message":"189","line":27,"column":8,"nodeType":"149","messageId":"150","endLine":27,"endColumn":20},{"ruleId":"147","severity":1,"message":"190","line":28,"column":8,"nodeType":"149","messageId":"150","endLine":28,"endColumn":20},{"ruleId":"147","severity":1,"message":"191","line":29,"column":8,"nodeType":"149","messageId":"150","endLine":29,"endColumn":17},{"ruleId":"147","severity":1,"message":"192","line":30,"column":8,"nodeType":"149","messageId":"150","endLine":30,"endColumn":18},{"ruleId":"147","severity":1,"message":"193","line":31,"column":8,"nodeType":"149","messageId":"150","endLine":31,"endColumn":16},{"ruleId":"147","severity":1,"message":"167","line":46,"column":5,"nodeType":"149","messageId":"150","endLine":46,"endColumn":23},{"ruleId":"147","severity":1,"message":"194","line":84,"column":7,"nodeType":"149","messageId":"150","endLine":84,"endColumn":17},{"ruleId":"147","severity":1,"message":"195","line":104,"column":7,"nodeType":"149","messageId":"150","endLine":104,"endColumn":21},{"ruleId":"147","severity":1,"message":"196","line":151,"column":10,"nodeType":"149","messageId":"150","endLine":151,"endColumn":18},{"ruleId":"147","severity":1,"message":"197","line":153,"column":9,"nodeType":"149","messageId":"150","endLine":153,"endColumn":20},{"ruleId":"147","severity":1,"message":"198","line":157,"column":9,"nodeType":"149","messageId":"150","endLine":157,"endColumn":20},{"ruleId":"147","severity":1,"message":"199","line":165,"column":12,"nodeType":"149","messageId":"150","endLine":165,"endColumn":23},{"ruleId":"147","severity":1,"message":"200","line":165,"column":25,"nodeType":"149","messageId":"150","endLine":165,"endColumn":39},{"ruleId":"147","severity":1,"message":"201","line":173,"column":12,"nodeType":"149","messageId":"150","endLine":173,"endColumn":23},{"ruleId":"147","severity":1,"message":"202","line":173,"column":25,"nodeType":"149","messageId":"150","endLine":173,"endColumn":39},{"ruleId":"147","severity":1,"message":"178","line":189,"column":12,"nodeType":"149","messageId":"150","endLine":189,"endColumn":21},{"ruleId":"147","severity":1,"message":"179","line":189,"column":23,"nodeType":"149","messageId":"150","endLine":189,"endColumn":35},{"ruleId":"147","severity":1,"message":"203","line":338,"column":8,"nodeType":"149","messageId":"150","endLine":338,"endColumn":15},{"ruleId":"172","replacedBy":"204"},{"ruleId":"174","replacedBy":"205"},{"ruleId":"147","severity":1,"message":"154","line":3,"column":8,"nodeType":"149","messageId":"150","endLine":3,"endColumn":17},{"ruleId":"147","severity":1,"message":"191","line":11,"column":8,"nodeType":"149","messageId":"150","endLine":11,"endColumn":17},{"ruleId":"147","severity":1,"message":"206","line":16,"column":8,"nodeType":"149","messageId":"150","endLine":16,"endColumn":16},{"ruleId":"147","severity":1,"message":"207","line":26,"column":8,"nodeType":"149","messageId":"150","endLine":26,"endColumn":36},{"ruleId":"147","severity":1,"message":"208","line":27,"column":8,"nodeType":"149","messageId":"150","endLine":27,"endColumn":25},{"ruleId":"147","severity":1,"message":"209","line":31,"column":9,"nodeType":"149","messageId":"150","endLine":31,"endColumn":20},{"ruleId":"210","severity":1,"message":"211","line":39,"column":1,"nodeType":"212","endLine":44,"endColumn":3},{"ruleId":"147","severity":1,"message":"152","line":2,"column":21,"nodeType":"149","messageId":"150","endLine":2,"endColumn":29},{"ruleId":"147","severity":1,"message":"161","line":4,"column":8,"nodeType":"149","messageId":"150","endLine":4,"endColumn":12},{"ruleId":"147","severity":1,"message":"213","line":6,"column":8,"nodeType":"149","messageId":"150","endLine":6,"endColumn":14},{"ruleId":"147","severity":1,"message":"214","line":7,"column":8,"nodeType":"149","messageId":"150","endLine":7,"endColumn":12},{"ruleId":"147","severity":1,"message":"215","line":9,"column":8,"nodeType":"149","messageId":"150","endLine":9,"endColumn":19},{"ruleId":"147","severity":1,"message":"216","line":10,"column":8,"nodeType":"149","messageId":"150","endLine":10,"endColumn":19},{"ruleId":"147","severity":1,"message":"176","line":11,"column":8,"nodeType":"149","messageId":"150","endLine":11,"endColumn":14},{"ruleId":"147","severity":1,"message":"217","line":12,"column":8,"nodeType":"149","messageId":"150","endLine":12,"endColumn":15},{"ruleId":"147","severity":1,"message":"218","line":13,"column":8,"nodeType":"149","messageId":"150","endLine":13,"endColumn":12},{"ruleId":"147","severity":1,"message":"219","line":14,"column":8,"nodeType":"149","messageId":"150","endLine":14,"endColumn":17},{"ruleId":"147","severity":1,"message":"220","line":15,"column":8,"nodeType":"149","messageId":"150","endLine":15,"endColumn":23},{"ruleId":"168","severity":1,"message":"185","line":60,"column":8,"nodeType":"170","endLine":60,"endColumn":10,"suggestions":"221"},{"ruleId":"147","severity":1,"message":"182","line":6,"column":8,"nodeType":"149","messageId":"150","endLine":6,"endColumn":24},{"ruleId":"147","severity":1,"message":"183","line":7,"column":8,"nodeType":"149","messageId":"150","endLine":7,"endColumn":16},{"ruleId":"147","severity":1,"message":"222","line":9,"column":8,"nodeType":"149","messageId":"150","endLine":9,"endColumn":12},{"ruleId":"147","severity":1,"message":"223","line":74,"column":22,"nodeType":"149","messageId":"150","endLine":74,"endColumn":35},{"ruleId":"168","severity":1,"message":"224","line":149,"column":4,"nodeType":"170","endLine":149,"endColumn":20,"suggestions":"225"},{"ruleId":"147","severity":1,"message":"226","line":1,"column":17,"nodeType":"149","messageId":"150","endLine":1,"endColumn":25},{"ruleId":"147","severity":1,"message":"181","line":1,"column":27,"nodeType":"149","messageId":"150","endLine":1,"endColumn":36},{"ruleId":"147","severity":1,"message":"152","line":2,"column":21,"nodeType":"149","messageId":"150","endLine":2,"endColumn":29},{"ruleId":"147","severity":1,"message":"176","line":12,"column":8,"nodeType":"149","messageId":"150","endLine":12,"endColumn":14},{"ruleId":"147","severity":1,"message":"227","line":14,"column":8,"nodeType":"149","messageId":"150","endLine":14,"endColumn":19},{"ruleId":"147","severity":1,"message":"228","line":15,"column":8,"nodeType":"149","messageId":"150","endLine":15,"endColumn":18},{"ruleId":"147","severity":1,"message":"177","line":16,"column":8,"nodeType":"149","messageId":"150","endLine":16,"endColumn":18},{"ruleId":"147","severity":1,"message":"229","line":17,"column":8,"nodeType":"149","messageId":"150","endLine":17,"endColumn":15},{"ruleId":"147","severity":1,"message":"178","line":46,"column":10,"nodeType":"149","messageId":"150","endLine":46,"endColumn":19},{"ruleId":"147","severity":1,"message":"179","line":46,"column":21,"nodeType":"149","messageId":"150","endLine":46,"endColumn":33},{"ruleId":"168","severity":1,"message":"169","line":99,"column":4,"nodeType":"170","endLine":99,"endColumn":18,"suggestions":"230"},{"ruleId":"147","severity":1,"message":"231","line":103,"column":7,"nodeType":"149","messageId":"150","endLine":103,"endColumn":25},"no-unused-vars","'TransitionGroup' is defined but never used.","Identifier","unusedVar","'LocalHospitalIcon' is defined but never used.","'useTheme' is defined but never used.","'PersonPinIcon' is defined but never used.","'PropTypes' is defined but never used.","'AppBar' is defined but never used.","'Tabs' is defined but never used.","'Tab' is defined but never used.","'Typography' is defined but never used.","'Box' is defined but never used.","'SwipeableViews' is defined but never used.","'Fade' is defined but never used.","'Link' is defined but never used.","'Fab' is defined but never used.","'AddIcon' is defined but never used.","'EditIcon' is defined but never used.","'useHistory' is defined but never used.","'KeyboardTimePicker' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'carrier.id' and 'currentUser.accessToken'. Either include them or remove the dependency array.","ArrayExpression",["232"],"no-native-reassign",["233"],"no-negated-in-lhs",["234"],"'Button' is defined but never used.","'DeleteIcon' is defined but never used.","'employees' is assigned a value but never used.","'setEmployees' is assigned a value but never used.",["235"],"'useEffect' is defined but never used.","'FormControlLabel' is defined but never used.","'Checkbox' is defined but never used.","'resMessage' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'currentUser'. Either include it or remove the dependency array.",["236"],["233"],["234"],"'ListItemIcon' is defined but never used.","'ListItemText' is defined but never used.","'InboxIcon' is defined but never used.","'DraftsIcon' is defined but never used.","'SendIcon' is defined but never used.","'StyledMenu' is assigned a value but never used.","'StyledMenuItem' is assigned a value but never used.","'anchorEl' is assigned a value but never used.","'handleClick' is assigned a value but never used.","'handleClose' is assigned a value but never used.","'currentUser' is assigned a value but never used.","'setCurrentUser' is assigned a value but never used.","'accessToken' is assigned a value but never used.","'setAccessToken' is assigned a value but never used.","'carrier' is assigned a value but never used.",["233"],["234"],"'MailIcon' is defined but never used.","'AddCircleOutlineOutlinedIcon' is defined but never used.","'EventOutlinedIcon' is defined but never used.","'useLocation' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'Avatar' is defined but never used.","'Card' is defined but never used.","'CardActions' is defined but never used.","'CardContent' is defined but never used.","'Stepper' is defined but never used.","'Step' is defined but never used.","'StepLabel' is defined but never used.","'CheckCircleIcon' is defined but never used.",["237"],"'Grid' is defined but never used.","'setActiveStep' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'currentUser.accessToken' and 'currentUser.id'. Either include them or remove the dependency array.",["238"],"'useState' is defined but never used.","'ThumbUpIcon' is defined but never used.","'IconButton' is defined but never used.","'Tooltip' is defined but never used.",["239"],"'approveAppointment' is assigned a value but never used.",{"desc":"240","fix":"241"},"no-global-assign","no-unsafe-negation",{"desc":"242","fix":"243"},{"desc":"244","fix":"245"},{"desc":"244","fix":"246"},{"desc":"247","fix":"248"},{"desc":"242","fix":"249"},"Update the dependencies array to be: [carrier.id, currentUser.accessToken, employees]",{"range":"250","text":"251"},"Update the dependencies array to be: [appointments, carrier.id, currentUser.accessToken]",{"range":"252","text":"253"},"Update the dependencies array to be: [currentUser]",{"range":"254","text":"255"},{"range":"256","text":"255"},"Update the dependencies array to be: [currentUser.accessToken, currentUser.id, fetchedCarrier]",{"range":"257","text":"258"},{"range":"259","text":"253"},[4250,4261],"[carrier.id, currentUser.accessToken, employees]",[2643,2657],"[appointments, carrier.id, currentUser.accessToken]",[988,990],"[currentUser]",[1644,1646],[4179,4195],"[currentUser.accessToken, currentUser.id, fetchedCarrier]",[2644,2658]]